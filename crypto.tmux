#!/usr/bin/env bash

CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "$CURRENT_DIR/scripts/helpers.sh"

crypto_commands=(
  "#($CURRENT_DIR/scripts/ada_usd.sh)"
  "#($CURRENT_DIR/scripts/ada_eur.sh)"
  "#($CURRENT_DIR/scripts/ada_aud.sh)"
  "#($CURRENT_DIR/scripts/ada_cad.sh)"
  "#($CURRENT_DIR/scripts/ada_chf.sh)"
  "#($CURRENT_DIR/scripts/ada_dkk.sh)"
  "#($CURRENT_DIR/scripts/ada_gbp.sh)"
  "#($CURRENT_DIR/scripts/ada_nok.sh)"
  "#($CURRENT_DIR/scripts/ada_sek.sh)"
  "#($CURRENT_DIR/scripts/btc_usd.sh)"
  "#($CURRENT_DIR/scripts/btc_eur.sh)"
  "#($CURRENT_DIR/scripts/btc_aud.sh)"
  "#($CURRENT_DIR/scripts/btc_cad.sh)"
  "#($CURRENT_DIR/scripts/btc_chf.sh)"
  "#($CURRENT_DIR/scripts/btc_dkk.sh)"
  "#($CURRENT_DIR/scripts/btc_gbp.sh)"
  "#($CURRENT_DIR/scripts/btc_nok.sh)"
  "#($CURRENT_DIR/scripts/btc_sek.sh)"
  "#($CURRENT_DIR/scripts/dot_usd.sh)"
  "#($CURRENT_DIR/scripts/dot_eur.sh)"
  "#($CURRENT_DIR/scripts/dot_aud.sh)"
  "#($CURRENT_DIR/scripts/dot_cad.sh)"
  "#($CURRENT_DIR/scripts/dot_chf.sh)"
  "#($CURRENT_DIR/scripts/dot_dkk.sh)"
  "#($CURRENT_DIR/scripts/dot_gbp.sh)"
  "#($CURRENT_DIR/scripts/dot_nok.sh)"
  "#($CURRENT_DIR/scripts/dot_sek.sh)"
  "#($CURRENT_DIR/scripts/ksm_usd.sh)"
  "#($CURRENT_DIR/scripts/ksm_eur.sh)"
  "#($CURRENT_DIR/scripts/ksm_aud.sh)"
  "#($CURRENT_DIR/scripts/ksm_cad.sh)"
  "#($CURRENT_DIR/scripts/ksm_chf.sh)"
  "#($CURRENT_DIR/scripts/ksm_dkk.sh)"
  "#($CURRENT_DIR/scripts/ksm_gbp.sh)"
  "#($CURRENT_DIR/scripts/ksm_nok.sh)"
  "#($CURRENT_DIR/scripts/ksm_sek.sh)"
  "#($CURRENT_DIR/scripts/eth_usd.sh)"
  "#($CURRENT_DIR/scripts/eth_eur.sh)"
  "#($CURRENT_DIR/scripts/eth_aud.sh)"
  "#($CURRENT_DIR/scripts/eth_cad.sh)"
  "#($CURRENT_DIR/scripts/eth_chf.sh)"
  "#($CURRENT_DIR/scripts/eth_dkk.sh)"
  "#($CURRENT_DIR/scripts/eth_gbp.sh)"
  "#($CURRENT_DIR/scripts/eth_nok.sh)"
  "#($CURRENT_DIR/scripts/eth_sek.sh)"
  "#($CURRENT_DIR/scripts/link_usd.sh)"
  "#($CURRENT_DIR/scripts/link_eur.sh)"
  "#($CURRENT_DIR/scripts/link_aud.sh)"
  "#($CURRENT_DIR/scripts/link_cad.sh)"
  "#($CURRENT_DIR/scripts/link_chf.sh)"
  "#($CURRENT_DIR/scripts/link_dkk.sh)"
  "#($CURRENT_DIR/scripts/link_gbp.sh)"
  "#($CURRENT_DIR/scripts/link_nok.sh)"
  "#($CURRENT_DIR/scripts/link_sek.sh)"
  "#($CURRENT_DIR/scripts/ltc_usd.sh)"
  "#($CURRENT_DIR/scripts/ltc_eur.sh)"
  "#($CURRENT_DIR/scripts/ltc_aud.sh)"
  "#($CURRENT_DIR/scripts/ltc_cad.sh)"
  "#($CURRENT_DIR/scripts/ltc_chf.sh)"
  "#($CURRENT_DIR/scripts/ltc_dkk.sh)"
  "#($CURRENT_DIR/scripts/ltc_gbp.sh)"
  "#($CURRENT_DIR/scripts/ltc_nok.sh)"
  "#($CURRENT_DIR/scripts/ltc_sek.sh)"
  "#($CURRENT_DIR/scripts/nano_usd.sh)"
  "#($CURRENT_DIR/scripts/nano_eur.sh)"
  "#($CURRENT_DIR/scripts/nano_aud.sh)"
  "#($CURRENT_DIR/scripts/nano_cad.sh)"
  "#($CURRENT_DIR/scripts/nano_chf.sh)"
  "#($CURRENT_DIR/scripts/nano_dkk.sh)"
  "#($CURRENT_DIR/scripts/nano_gbp.sh)"
  "#($CURRENT_DIR/scripts/nano_nok.sh)"
  "#($CURRENT_DIR/scripts/nano_sek.sh)"
)

crypto_interpolation=(
	"\#{ada_usd}"
	"\#{ada_eur}"
	"\#{ada_aud}"
	"\#{ada_cad}"
	"\#{ada_chf}"
	"\#{ada_dkk}"
	"\#{ada_gbp}"
	"\#{ada_nok}"
	"\#{ada_sek}"
	"\#{btc_usd}"
	"\#{btc_eur}"
	"\#{btc_aud}"
	"\#{btc_cad}"
	"\#{btc_chf}"
	"\#{btc_dkk}"
	"\#{btc_gbp}"
	"\#{btc_nok}"
	"\#{btc_sek}"
	"\#{dot_usd}"
	"\#{dot_eur}"
	"\#{dot_aud}"
	"\#{dot_cad}"
	"\#{dot_chf}"
	"\#{dot_dkk}"
	"\#{dot_gbp}"
	"\#{dot_nok}"
	"\#{dot_sek}"
	"\#{ksm_usd}"
	"\#{ksm_eur}"
	"\#{ksm_aud}"
	"\#{ksm_cad}"
	"\#{ksm_chf}"
	"\#{ksm_dkk}"
	"\#{ksm_gbp}"
	"\#{ksm_nok}"
	"\#{ksm_sek}"
	"\#{eth_usd}"
	"\#{eth_eur}"
	"\#{eth_aud}"
	"\#{eth_cad}"
	"\#{eth_chf}"
	"\#{eth_dkk}"
	"\#{eth_gbp}"
	"\#{eth_nok}"
	"\#{eth_sek}"
	"\#{link_usd}"
	"\#{link_eur}"
	"\#{link_aud}"
	"\#{link_cad}"
	"\#{link_chf}"
	"\#{link_dkk}"
	"\#{link_gbp}"
	"\#{link_nok}"
	"\#{link_sek}"
	"\#{ltc_usd}"
	"\#{ltc_eur}"
	"\#{ltc_aud}"
	"\#{ltc_cad}"
	"\#{ltc_chf}"
	"\#{ltc_dkk}"
	"\#{ltc_gbp}"
	"\#{ltc_nok}"
	"\#{ltc_sek}"
	"\#{nano_usd}"
	"\#{nano_eur}"
	"\#{nano_aud}"
	"\#{nano_cad}"
	"\#{nano_chf}"
	"\#{nano_dkk}"
	"\#{nano_gbp}"
	"\#{nano_nok}"
	"\#{nano_sek}"
)

set_tmux_options() {
	local option="$1"
	local value="$2"
	tmux set-option -gp "$option" "$value"
}

do_interpolation() {
	local interpolated="$1"

	for ((i=0; i<${#crypto_commands[@]}; i++)); do
		interpolated=${interpolated/${crypto_interpolation[$i]}/${crypto_commands[$i]}}
	done

	echo "$interpolated"
}

update_tmux_option() {
	local option="$1"
	local option_value="$(get_tmux_option "$option")"
	local new_option_value="$(do_interpolation "$option_value")"
	set_tmux_option "$option" "$new_option_value"
}

main() {
	update_tmux_option "status-right"
	update_tmux_option "status-left"
}

main

